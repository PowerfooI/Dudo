{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\introductionCircle.js"],"names":["cc","Class","extends","Component","properties","roLeft","roRight","resetPostion","angle","red","node","getChildByName","blue","x","radius","y","centerY","drawCenterCircle","ctx","addComponent","Graphics","lineWidth","strokeColor","hexToColor","a","circle","width","height","stroke","preSetValueLoad","inputInfo","find","getComponent","preSetInfo","circleInfo","unitAngle","angularVelocity","rewindTime","gameTime","rewind","revolveTime","revolve","onLoad","status","absolute_centerX","onClickReturn","director","loadScene","updateDotPos","posx","Math","cos","posy","sin","update","dt"],"mappings":"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","file":"introductionCircle.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["//教程中的两个球及中心圆组件\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        roLeft : false,\n        roRight : false,\n    },\n\n    resetPostion: function () {\n        this.angle = 0\n        this.red = this.node.getChildByName('Red')\n        this.blue = this.node.getChildByName('Blue')\n\n        //位置设定\n        this.red.x = this.node.x - this.radius\n        this.blue.x = this.node.x + this.radius\n        this.red.y = this.centerY\n        this.blue.y = this.centerY\n        this.angle = 0\n    },\n\n    drawCenterCircle: function () {\n        //绘制中心的圆\n        let ctx = this.addComponent(cc.Graphics)\n\n        ctx.lineWidth = 4\n        ctx.strokeColor = cc.hexToColor('#555555')\n        ctx.strokeColor.a = 150\n        ctx.circle(this.node.width / 2, this.node.height / 2 + this.centerY, this.radius)\n        ctx.stroke()\n    },\n    // LIFE-CYCLE CALLBACKS:\n\n    preSetValueLoad: function() {\n        //加载预设值\n        let inputInfo = cc.find('Controller Node').getComponent('controller').preSetInfo\n        this.radius = inputInfo.circleInfo.radius\n        this.unitAngle = inputInfo.circleInfo.angularVelocity\n        this.centerY = inputInfo.circleInfo.centerY\n\n        this.rewindTime = inputInfo.gameTime.rewind\n        this.revolveTime = inputInfo.gameTime.revolve\n    },\n\n    onLoad() {\n        //设置状态\n        this.status = \"off\" //可以是off, on, pause, rewind\n        \n        //加载预设值\n        this.preSetValueLoad()\n        \n        //重制位置\n        this.resetPostion()\n        this.roLeft = false\n        this.roRight = false\n        this.absolute_centerX = this.node.width / 2\n\n        //绘制图形\n        this.drawCenterCircle()\n    },\n\n    onClickReturn:function(){\n        cc.director.loadScene('startmenu')\n    },\n\n    updateDotPos: function () {\n        let posx = Math.cos(this.angle) * this.radius\n        let posy = Math.sin(this.angle) * this.radius\n        this.blue.x = posx\n        this.blue.y = posy + this.centerY\n        this.red.x = -posx\n        this.red.y = -posy + this.centerY\n    },\n\n    update(dt) {\n        if (this.roLeft) {\n            this.angle += this.unitAngle\n        } else if (this.roRight) {\n            this.angle -= this.unitAngle\n        }\n        //计算新的位置\n        this.updateDotPos()\n    },\n});"]}