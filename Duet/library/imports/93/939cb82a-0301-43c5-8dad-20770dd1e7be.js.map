{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\game.js"],"names":["cc","Class","extends","Component","properties","circle","default","type","Node","obstacles","scoreHint","lifeHint","passHint","gameEnd","finalScore","resetParticle","particle","startSize","endSize","startColor","setA","angleVar","duration","life","gravity","y","resetSystem","calculateAngle","method","getComponent","frameMark","tempAngle","angle","Math","PI","getNormalLevelSpeed","level","controller","currentLevel","split","preSetInfo","levelSpeed","Default","loadNextLevel","mode","biglev","Number","littlelev","levelNums","toString","length","director","loadScene","console","log","loadCurrentLevel","active","drawNormalLevel","gamespeed","drawEndlessLevel","drawChallengeLevel","unitAngle","circleInfo","angularVelocity","speed","obstaclesInfo","onLoad","ctrlNode","find","deadPauseTime","gameTime","deadPause","passPauseTime","passPause","refreshScoreTime","refreshScore","gameStatus","start","currentLife","children","node","on","event","status","_components","play","parseInt","currentScore","Label","string","wx","postMessage","message","score","update","dt","Red","Blue","opacity","ParticleSystem"],"mappings":"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","file":"game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //中心圆的引用\n        circle: {\n            default: null,\n            type: cc.Node,\n        },\n        //障碍物的引用\n        obstacles: {\n            default: null,\n            type: cc.Node,\n        },\n        //提示文字的引用\n        scoreHint: {\n            default: null,\n            type: cc.Node\n        },\n        lifeHint: {\n            default: null,\n            type: cc.Node\n        },\n        passHint: {\n            default: null,\n            type: cc.Node\n        },\n        gameEnd: {\n            default: null,\n            type: cc.Node\n        },\n        finalScore: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    //重设粒子效果，即关闭爆炸特效\n    resetParticle: function(particle) {\n        particle.startSize = 60\n        particle.endSize = 0\n        particle.startColor = particle.startColor.setA(20)\n        \n        particle.angleVar = 0\n        particle.duration = -1\n        \n        particle.life = 1.2\n        particle.gravity.y = -200\n        particle.resetSystem()\n    },\n\n    //计算需要旋转的角度，进行rewind和revolve\n    calculateAngle: function(method) {\n        let circle = this.circle.getComponent(\"circle\")\n        circle.frameMark = 0\n        let tempAngle = (circle.angle % Math.PI)\n\n        if (tempAngle > Math.PI / 2) circle[method] = tempAngle - Math.PI\n        else if (tempAngle < -Math.PI / 2) circle[method] = tempAngle + Math.PI\n        else circle[method] = tempAngle\n    },\n\n    //关卡速度保存在预设文件中，从中获取游戏速度\n    getNormalLevelSpeed: function(){\n        let level = this.controller.currentLevel.split('_')[2]\n        if (this.controller.preSetInfo.levelSpeed[this.controller.currentLevel])\n            return this.controller.preSetInfo.levelSpeed[this.controller.currentLevel]\n        else {\n            return this.controller.preSetInfo.levelSpeed.Default[level - 1]\n        }\n    },\n\n    //加载下一关，更改目前所在关卡这一值\n    loadNextLevel: function(){\n        if (this.controller.currentLevel.split('_')[0] !== 'Endless') {\n            //不是endless，计算下一关\n            let level = this.controller.currentLevel.split('_')\n            let mode = level[0]\n            let biglev = Number(level[1])\n            let littlelev = Number(level[2])\n\n            //还是目前大关的情况\n            if (littlelev + 1 <= this.controller.preSetInfo.levelNums[biglev - 1]){\n                this.controller.currentLevel = mode + '_' + biglev.toString() + '_' + (littlelev + 1).toString()\n            }\n            else if (biglev < this.controller.preSetInfo.levelNums.length){\n                this.controller.currentLevel = mode + '_' + (biglev+1).toString() + '_1'\n            }\n            else {\n                //全部通关\n                cc.director.loadScene('startmenu')\n            }\n            console.log(this.controller.currentLevel)\n        }\n\n        this.loadCurrentLevel()\n    },\n\n    //加载关卡\n    loadCurrentLevel: function(){\n        switch(this.controller.currentLevel.split('_')[0]){\n            case \"Normal\":\n                this.scoreHint.active = false\n                this.lifeHint.active = false\n                this.obstacles.getComponent(\"obstacles\").drawNormalLevel(this.controller.currentLevel)\n                this.gamespeed = this.getNormalLevelSpeed()\n            break\n            case \"Endless\":\n                this.obstacles.getComponent(\"obstacles\").drawEndlessLevel()\n                this.gamespeed = 1.5\n            break\n            case \"Challenge\":\n                this.scoreHint.active = false\n                this.lifeHint.active = false\n                this.obstacles.getComponent(\"obstacles\").drawChallengeLevel(this.controller.currentLevel)\n                this.gamespeed = 1.7\n            break\n        }\n\n        //更改速度\n        this.circle.getComponent(\"circle\").unitAngle = this.gamespeed * this.controller.preSetInfo.circleInfo.angularVelocity\n        this.obstacles.getComponent(\"obstacles\").speed = this.gamespeed * this.controller.preSetInfo.obstaclesInfo.speed\n        \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        //加载控制器\n        this.ctrlNode = cc.find('Controller Node')\n        this.controller = this.ctrlNode.getComponent('controller')\n\n        //预设值\n        this.deadPauseTime = this.controller.preSetInfo.gameTime.deadPause\n        this.passPauseTime = this.controller.preSetInfo.gameTime.passPause\n        this.refreshScoreTime = this.controller.preSetInfo.gameTime.refreshScore\n\n        this.passHint.active = false\n        this.gameEnd.active = false\n        this.finalScore.active = false\n        this.gameStatus = \"on\"\n        this.frameMark = 0\n    },\n\n    //start在update前，其他组件onload之后，可以开始加载障碍\n    start() {\n        this.gamespeed = 1\n        //此处加载关卡，首先判定游戏模式\n        this.loadCurrentLevel()\n        \n        //判定是否需要生命\n        if (this.controller.currentLevel.split('_')[0] === 'Endless'){\n            this.currentLife = 3\n\n            this.lifeHint.children[0].active = false\n            this.lifeHint.children[1].active = false\n            this.lifeHint.children[2].active = false\n        }\n\n        //绑定事件\n        //加载下一关事件\n        this.node.on('LevelPassed', function (event) {\n            //过关之后有一段时间暂停\n            this.gameStatus = 'passPause'\n            this.obstacles.getComponent(\"obstacles\").status = 'off'\n            this.circle.getComponent(\"circle\").status = 'pause'\n            this.frameMark = 0\n\n            //显示过关\n            this.passHint.active = true\n\n            //加载下一关\n            this.loadNextLevel()\n\n            //设置revolve\n            //计算要旋转的角度\n            this.calculateAngle('revolveAnlge')\n        }, this)\n\n        //撞击死亡事件\n        this.node.on('CollisionDead', function (event) {\n            //撞击之后的事件\n            if (this.gameStatus === 'on') {\n\n                //在这里添加撞击后死亡的音效（如果有的话）\n                this.ctrlNode._components[2].play()\n\n                //如果是无尽模式则需要对生命特判\n                if (this.controller.currentLevel.split('_')[0] === 'Endless') {\n                    //更新生命\n                    this.currentLife--\n                    this.lifeHint.children[this.currentLife].active = true\n                    this.lifeHint.children[this.currentLife + 3].active = false\n                    if (this.currentLife === 0) {\n                        let finalScore = parseInt(this.obstacles.getComponent('obstacles').currentScore)\n                        this.obstacles.getComponent(\"obstacles\").status = 'pause'\n                        this.circle.getComponent(\"circle\").status = 'pause'\n                        this.gameEnd.active = true\n                        this.finalScore.active = true\n                        this.finalScore.getComponent(cc.Label).string = \"最终得分: \" + finalScore.toString()\n                        \n                        //在这里上传得分，最终得分即为上面的finalScore变量\n                        wx.postMessage({\n                            message:'UpdateScore',\n                            score:finalScore.toString()\n                        })\n\n                        return\n                    }\n                }\n    \n                //游戏正在运行,发生碰撞,暂停\n                this.gameStatus = 'deadPause'\n                this.obstacles.getComponent(\"obstacles\").status = 'pause'\n                this.circle.getComponent(\"circle\").status = 'pause'\n                this.frameMark = 0\n\n                //设置rewind\n                //计算要旋转的角度\n                this.calculateAngle('rewindAnlge')\n            }\n        }, this)\n\n        //撞击复活事件\n        this.node.on('CollisionRelive', function (event) {\n            this.gameStatus = 'on'\n        }, this)\n\n        //开始下一关事件\n        this.node.on('NewLevelStart', function (event) {\n            this.gameStatus = 'on'\n            this.obstacles.getComponent(\"obstacles\").status = 'on'\n            this.passHint.active = false\n        }, this)\n\n        //设置状态\n        this.obstacles.getComponent(\"obstacles\").status = 'on'\n        this.circle.getComponent(\"circle\").status = 'on'\n    },\n\n    update(dt) {\n        switch (this.gameStatus) {\n            case \"deadPause\":\n                if (this.frameMark >= this.deadPauseTime) {\n                    this.gameStatus = 'rewind'\n                    \n                    //在这里添加撞击后死亡后rewind过程的音效（如果有的话）\n                    this.ctrlNode._components[3].play()\n\n                    this.obstacles.getComponent(\"obstacles\").status = 'rewind'\n                    this.circle.getComponent(\"circle\").status = 'rewind'\n\n                    //重载粒子效果\n                    let Red = this.node.children[0].children[0]\n                    let Blue = this.node.children[0].children[1]\n                    Red.children[1].opacity = 255\n                    Blue.children[1].opacity = 255\n                    \n                    this.resetParticle(Red.children[0].getComponent(cc.ParticleSystem))\n                    this.resetParticle(Blue.children[0].getComponent(cc.ParticleSystem))\n\n                } else this.frameMark++\n                    break\n            case \"passPause\":\n                if (this.frameMark >= this.passPauseTime) {\n                    this.gameStatus = 'on'\n\n                    this.obstacles.getComponent(\"obstacles\").status = 'pause'\n                    this.circle.getComponent(\"circle\").status = 'revolve'\n                } else this.frameMark++\n                    break\n            case \"on\":\n                if (this.controller.currentLevel.split('_')[0] === 'Endless'){\n                    if (this.frameMark >= this.refreshScoreTime){\n                        this.scoreHint.getComponent(cc.Label).string = parseInt(this.obstacles.getComponent('obstacles').currentScore)\n                        this.frameMark = 0\n                    }\n                    else this.frameMark++\n                }\n                break\n            default:\n                break\n            }\n    },\n});"]}