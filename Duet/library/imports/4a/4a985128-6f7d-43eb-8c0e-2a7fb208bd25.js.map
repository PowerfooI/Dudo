{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\circle.js"],"names":["cc","Class","extends","Component","properties","resetPostion","angle","red","node","children","blue","x","radius","y","centerY","rotateControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","roRight","roLeft","d","KEY_UP","getLocationX","absolute_centerX","drawCenterCircle","ctx","addComponent","Graphics","lineWidth","strokeColor","hexToColor","circle","width","height","stroke","preSetValueLoad","inputInfo","find","getComponent","preSetInfo","circleInfo","unitAngle","angularVelocity","rewindTime","gameTime","rewind","revolveTime","revolve","onLoad","status","start","updateDotPos","posx","Math","cos","posy","sin","update","dt","frameMark","rewindAnlge","PI","dispatchEvent","Event","EventCustom","revolveAnlge"],"mappings":"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","file":"circle.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// 此文件为游戏中央圈的组件以及两个点\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    resetPostion: function () {\n        this.angle = 0\n        this.red = this.node.children[0]\n        this.blue = this.node.children[1]\n\n        //位置设定\n        this.red.x = this.node.x - this.radius\n        this.blue.x = this.node.x + this.radius\n        this.red.y = this.centerY\n        this.blue.y = this.centerY\n        this.angle = 0\n    },\n\n    rotateControl: function () {\n        let self = this\n\n        //键盘监听事件\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.roRight = false;\n                    self.roLeft = true;\n                    break;\n                case cc.KEY.d:\n                    self.roLeft = false;\n                    self.roRight = true;\n                    break;\n            }\n        });\n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.a:\n                    self.roLeft = false;\n                    break;\n                case cc.KEY.d:\n                    self.roRight = false;\n                    break;\n            }\n        });\n\n        //触摸事件\n        this.node.on('touchstart', function (event) {\n            if (event.getLocationX() < self.absolute_centerX) {\n                self.roRight = false;\n                self.roLeft = true;\n            } else {\n                self.roLeft = false;\n                self.roRight = true;\n            }\n        });\n\n        this.node.on('touchend', function (event) {\n            if (event.getLocationX() < self.absolute_centerX) {\n                self.roLeft = false;\n            } else {\n                self.roRight = false;\n            }\n        });\n    },\n\n    drawCenterCircle: function () {\n        //绘制中心的圆\n        let ctx = this.addComponent(cc.Graphics)\n\n        ctx.lineWidth = 4\n        ctx.strokeColor = cc.hexToColor('#555555')\n        ctx.strokeColor.a = 150\n        ctx.circle(this.node.width / 2, this.node.height / 2 + this.centerY, this.radius)\n        ctx.stroke()\n    },\n    // LIFE-CYCLE CALLBACKS:\n\n    preSetValueLoad: function() {\n        //加载预设值\n        let inputInfo = cc.find('Controller Node').getComponent('controller').preSetInfo\n        this.radius = inputInfo.circleInfo.radius\n        this.unitAngle = inputInfo.circleInfo.angularVelocity\n        this.centerY = inputInfo.circleInfo.centerY\n\n        this.rewindTime = inputInfo.gameTime.rewind\n        this.revolveTime = inputInfo.gameTime.revolve\n    },\n\n    onLoad() {\n        //设置状态\n        this.status = \"off\" //可以是off, on, pause, rewind\n        \n        //加载预设值\n        this.preSetValueLoad()\n        \n        //重制位置\n        this.resetPostion()\n        this.roLeft = false\n        this.roRight = false\n        this.absolute_centerX = this.node.width / 2\n\n        //加入旋转\n        this.rotateControl()\n\n        //绘制图形\n        this.drawCenterCircle()\n    },\n\n    //start函数在onload之后调用\n    start() {\n\n    },\n\n    updateDotPos: function () {\n        let posx = Math.cos(this.angle) * this.radius\n        let posy = Math.sin(this.angle) * this.radius\n        this.blue.x = posx\n        this.blue.y = posy + this.centerY\n        this.red.x = -posx\n        this.red.y = -posy + this.centerY\n    },\n\n    update(dt) {\n        switch (this.status) {\n            case \"pause\":\n                break\n            case \"rewind\":\n                if (this.frameMark < this.rewindTime) {\n                    this.angle -= (this.rewindAnlge + 2 * Math.PI) / this.rewindTime\n                    this.updateDotPos()\n                    this.frameMark++\n                } else {\n                    // console.log()\n                    this.status = 'on'\n                    this.rewindAnlge = 0\n                    this.node.dispatchEvent(new cc.Event.EventCustom('CollisionRelive', true))\n                }\n                break\n            case \"revolve\":\n                if (this.frameMark < this.revolveTime) {\n                    this.angle -= (this.revolveAnlge) / this.revolveTime\n                    this.updateDotPos()\n                    this.frameMark++\n                } else {\n                    this.status = 'on'\n                    this.revolveAnlge = 0\n                    this.node.dispatchEvent(new cc.Event.EventCustom('NewLevelStart', true))\n                }\n                break\n            default:\n                //正常情况，接受用户交互\n                if (this.roLeft) {\n                    this.angle += this.unitAngle\n                } else if (this.roRight) {\n                    this.angle -= this.unitAngle\n                }\n                //计算新的位置\n                this.updateDotPos()\n                break\n        }\n    },\n});"]}