{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\dot.js"],"names":["cc","Class","extends","Component","properties","onLoad","manager","director","getCollisionManager","enabled","onCollisionEnter","other","self","node","parent","getComponent","status","children","opacity","particle","ParticleSystem","startSize","endSize","angleVar","duration","startColor","setA","life","gravity","y","resetSystem","deadEvent","Event","EventCustom","dispatchEvent","start"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAOL;;AAEAC,UATK,oBASI;AACL;AACA,YAAIC,UAAUN,GAAGO,QAAH,CAAYC,mBAAZ,EAAd;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACH,KAbI;;;AAeLC,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrC;;AAEA,YAAI,KAAKC,IAAL,CAAUC,MAAV,CAAiBA,MAAjB,CAAwBC,YAAxB,CAAqC,QAArC,EAA+CC,MAA/C,KAA0D,IAA9D,EAAoE;AAChE,iBAAKH,IAAL,CAAUC,MAAV,CAAiBG,QAAjB,CAA0B,CAA1B,EAA6BC,OAA7B,GAAuC,CAAvC;AACA,gBAAIC,WAAW,KAAKN,IAAL,CAAUC,MAAV,CAAiBG,QAAjB,CAA0B,CAA1B,EAA6BF,YAA7B,CAA0Cf,GAAGoB,cAA7C,CAAf;;AAEA;AACAD,qBAASE,SAAT,GAAqB,EAArB;AACAF,qBAASG,OAAT,GAAmB,CAAnB;AACAH,qBAASI,QAAT,GAAoB,GAApB;AACAJ,qBAASK,QAAT,GAAoB,GAApB;AACAL,qBAASM,UAAT,GAAsBN,SAASM,UAAT,CAAoBC,IAApB,CAAyB,GAAzB,CAAtB;;AAEAP,qBAASQ,IAAT,GAAgB,CAAhB;AACAR,qBAASS,OAAT,CAAiBC,CAAjB,GAAqB,CAAC,GAAtB;AACAV,qBAASW,WAAT;AAEH;AACD;AACA,YAAIC,YAAY,IAAI/B,GAAGgC,KAAH,CAASC,WAAb,CAAyB,eAAzB,EAA0C,IAA1C,CAAhB;AACA,aAAKpB,IAAL,CAAUqB,aAAV,CAAwBH,SAAxB;AAEH,KAtCI;;AAwCLI,SAxCK,mBAwCG,CAEP;AA1CI;;AA4CL;AA5CJ","file":"dot.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        //开启碰撞检测\n        let manager = cc.director.getCollisionManager()\n        manager.enabled = true\n    },\n\n    onCollisionEnter: function (other, self) {\n        //撞击后的效果\n        \n        if (this.node.parent.parent.getComponent('circle').status === 'on') {\n            this.node.parent.children[1].opacity = 0\n            let particle = this.node.parent.children[0].getComponent(cc.ParticleSystem)\n            \n            // 撞击后的爆炸效果\n            particle.startSize = 20\n            particle.endSize = 0\n            particle.angleVar = 360\n            particle.duration = 0.1\n            particle.startColor = particle.startColor.setA(255)\n\n            particle.life = 2\n            particle.gravity.y = -500\n            particle.resetSystem()\n\n        }\n        //发送撞击事件\n        let deadEvent = new cc.Event.EventCustom('CollisionDead', true)\n        this.node.dispatchEvent(deadEvent)\n\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});"]}