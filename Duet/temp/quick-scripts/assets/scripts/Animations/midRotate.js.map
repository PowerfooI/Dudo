{"version":3,"sources":["midRotate.js"],"names":["cc","Class","extends","Component","properties","onLoad","start","animationMoved","inputInfo","find","getComponent","preSetInfo","parentSpeed","node","parent","speed","centerY","circleInfo","moveY","width","animationInfo","moveYDebt","rotateSpeed","beginRotateDis","update","dt","dis","y","status","rotation","rotateDirection","Math","abs","rewindScale"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEAC,UAvBK,oBAuBI;AACL;AACH,KAzBI;AA2BLC,SA3BK,mBA2BG;;AAEJ,aAAKC,cAAL,GAAsB,CAAtB;;AAEA,YAAIC,YAAYR,GAAGS,IAAH,CAAQ,iBAAR,EAA2BC,YAA3B,CAAwC,YAAxC,EAAsDC,UAAtE;;AAEA;AACA,aAAKC,WAAL,GAAmB,KAAKC,IAAL,CAAUC,MAAV,CAAiBJ,YAAjB,CAA8B,WAA9B,EAA2CK,KAA9D;AACA,aAAKC,OAAL,GAAeR,UAAUS,UAAV,CAAqBD,OAApC;;AAEA,aAAKE,KAAL,GAAa,KAAKL,IAAL,CAAUM,KAAV,GAAkBX,UAAUY,aAAV,CAAwBC,SAAvD;AACA,aAAKC,WAAL,GAAmB,MAAM,KAAKV,WAAX,GAAyB,KAAKM,KAAjD;AACA;;AAEA;AACA,aAAKK,cAAL,GAAsB,KAAKL,KAAL,GAAa,CAAnC;AACH,KA3CI;AA6CLM,UA7CK,kBA6CEC,EA7CF,EA6CM;AACP;AACA,YAAIC,MAAM,KAAKb,IAAL,CAAUC,MAAV,CAAiBa,CAAjB,GAAqB,KAAKd,IAAL,CAAUc,CAA/B,GAAmC,KAAKX,OAAlD;;AAEA;AACA,gBAAQ,KAAKH,IAAL,CAAUC,MAAV,CAAiBJ,YAAjB,CAA8B,WAA9B,EAA2CkB,MAAnD;AACI,iBAAK,IAAL;AACI,oBAAIF,MAAM,KAAKH,cAAf,EAA+B;AAC3B,yBAAKV,IAAL,CAAUgB,QAAV,IAAsB,KAAKP,WAAL,GAAmB,KAAKT,IAAL,CAAUiB,eAAnD;AACA,yBAAKvB,cAAL,IAAuBwB,KAAKC,GAAL,CAAS,KAAKV,WAAd,CAAvB;AACH;AACD;AACJ,iBAAK,QAAL;AACI,oBAAI,KAAKf,cAAL,GAAsB,CAA1B,EAA6B;AACzB,yBAAKM,IAAL,CAAUgB,QAAV,IAAsB,KAAKP,WAAL,GAAmB,KAAKT,IAAL,CAAUC,MAAV,CAAiBmB,WAApC,GAAkD,KAAKpB,IAAL,CAAUiB,eAAlF;AACA,yBAAKvB,cAAL,IAAuBwB,KAAKC,GAAL,CAAS,KAAKV,WAAL,GAAmB,KAAKT,IAAL,CAAUC,MAAV,CAAiBmB,WAA7C,CAAvB;AACH,iBAHD,MAIK,IAAI,KAAK1B,cAAL,GAAsB,CAA1B,EAA6B,KAAKA,cAAL,GAAsB,CAAtB;AAClC;AACJ,iBAAK,KAAL;AACA,iBAAK,OAAL;AACA;AACI;AAjBR;AAmBH;AArEI,CAAT","file":"midRotate.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Animations","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        // this.rotateDirection = 1 //左转为1\n    },\n\n    start() {\n\n        this.animationMoved = 0\n\n        let inputInfo = cc.find('Controller Node').getComponent('controller').preSetInfo\n\n        // this.parentSpeed = inputInfo.obstaclesInfo.speed\n        this.parentSpeed = this.node.parent.getComponent('obstacles').speed\n        this.centerY = inputInfo.circleInfo.centerY\n\n        this.moveY = this.node.width - inputInfo.animationInfo.moveYDebt\n        this.rotateSpeed = 180 * this.parentSpeed / this.moveY\n        // this.rewindScale = inputInfo.animationInfo.rewindScale\n\n        // this.beginRotateDis = this.moveY * (3 + 1 / 2) + this.moveY / 2\n        this.beginRotateDis = this.moveY * 3\n    },\n\n    update(dt) {\n        //到旋转中心的距离\n        let dis = this.node.parent.y + this.node.y - this.centerY\n\n        //距离旋转中心this.moveLRDis的距离开始这个动作\n        switch (this.node.parent.getComponent('obstacles').status) {\n            case \"on\":\n                if (dis < this.beginRotateDis) {\n                    this.node.rotation -= this.rotateSpeed * this.node.rotateDirection\n                    this.animationMoved += Math.abs(this.rotateSpeed)\n                }\n                break\n            case \"rewind\":\n                if (this.animationMoved > 0) {\n                    this.node.rotation += this.rotateSpeed * this.node.parent.rewindScale * this.node.rotateDirection\n                    this.animationMoved -= Math.abs(this.rotateSpeed * this.node.parent.rewindScale)\n                }\n                else if (this.animationMoved < 0) this.animationMoved = 0\n                break\n            case \"off\":\n            case \"pause\":\n            default:\n                break\n        }\n    },\n});"]}